from yahoofinancials import YahooFinancials
import matplotlib.pyplot as plt
from selenium import webdriver
from TokenFile import TOKEN
from PIL import Image
import telebot
import time

bot = telebot.TeleBot(token=TOKEN)
BATIN_ID = 57678862
MY_ID = 407742044


stocks_that_are_already_sent = {}
with open('stocks_that_are_already_sent.txt', 'r') as f:
    sent_stocks = f.readlines()
    for sent_stock in sent_stocks:
        stocks_that_are_already_sent[sent_stock.split(' ')[0]] = sent_stock.split(' ')[1]


def GetHistoricalPrices(ticker_):
    yahoo_financials = YahooFinancials(ticker_)
    historical_price_data_ = yahoo_financials.get_historical_price_data(start_date='1900-01-01',
                                                                        end_date=time.strftime('20%y-%m-%d'),
                                                                        time_interval='daily')[ticker_]['prices']

    historical_prices_ = []
    for price_tick_ in historical_price_data_:
        price_tick_ = round(float(price_tick_['close']), 2)
        historical_prices_.append(price_tick_)
    return historical_prices_


def all_time_bear_trend_exists(quotes_list):
    first_200_ma = sum(quotes_list[:200]) / 200
    last_200_ma = sum(quotes_list[-200:]) / 200
    quotes_list = quotes_list[:-1]
    for j in range(50):
        for a in range(len(quotes_list) - 1):
            if a == 0:
                continue
            if a <= 20:
                quotes_before_a = quotes_list[:a + 1]
                quotes_list[a] = sum(quotes_before_a) / len(quotes_before_a)
            else:
                quotes_before_a = quotes_list[a - 19:a + 1]
                quotes_list[a] = sum(quotes_before_a) / len(quotes_before_a)
    quotes_list = quotes_list[20:-1]

    if quotes_list[-1] <= quotes_list[0] and last_200_ma <= 0.8 * first_200_ma:
        return True
    return False


def SaveImgWithStockPlot(historical_prices_, days_to_be_visualized_=0):
    if days_to_be_visualized_ == 0 or days_to_be_visualized_ > len(historical_prices_):
        days_to_be_visualized_ = len(historical_prices_)
    x = range(days_to_be_visualized_)
    y = historical_prices_[-days_to_be_visualized_:]
    plt.plot(x, y, color='black')
    title = ''
    if days_to_be_visualized_ == 250:
        title = 'График за последний год:'
    elif days_to_be_visualized_ == 750:
        title = 'График за последние 3 года:'
    elif days_to_be_visualized_ == len(historical_prices_):
        title = 'График за все время:'
    plt.title(title)
    plt.xticks(ticks=[])
    plot_number = str(days_to_be_visualized_) if days_to_be_visualized_ != len(historical_prices_) else '_all_time'
    plt.savefig(f'plot{plot_number}.png')
    plt.close()


def CreateImgWith3Plots(historical_prices_):
    SaveImgWithStockPlot(historical_prices_, 250)
    SaveImgWithStockPlot(historical_prices_, 750)
    SaveImgWithStockPlot(historical_prices_)

    img = Image.new('RGB', (1890, 460))
    img1 = Image.open('plot250.png')
    img2 = Image.open('plot750.png')
    img3 = Image.open('plot_all_time.png')
    img.paste(img1, (0, 0))
    img.paste(img2, (630, 0))
    img.paste(img3, (1260, 0))

    img.save("plot.png")


def UpdateStocksAbsentInYahooFile(ticker_):
    with open('StocksAbsentInYahoo.txt', 'r') as f_:
        problem_stocks_ = list(map(lambda i: i.strip(), f_.readlines()))
    if ticker_ not in problem_stocks_:
        with open('StocksAbsentInYahoo.txt', 'a') as f_:
            f_.write(ticker_ + '\n')


def LogErrorAndSendAlarm(err_):
    with open('logfile.txt', 'a') as f_:
        f_.write(str(err_) + '\n')
    bot.send_message(MY_ID, f'Была найдена ошибка:\n {err_}')


while True:

    if time.strftime('%H') < '07':
        time.sleep(1800)

    time.sleep(5)

    try:
        driver = webdriver.Chrome(executable_path="chromedriver.exe")
        driver.set_page_load_timeout(60)
        driver.get("https://www.tradingview.com/markets/stocks-usa/market-movers-gainers/")
        time.sleep(5)
    except Exception as err:
        LogErrorAndSendAlarm(err)
        time.sleep(61)
        continue

    xpath_for_tickers = '//a[@class="apply-common-tooltip tickerName-qN79lDF8"]'
    xpath_for_percent_changes = '//span[@class="positive-QbTXS8yz"]'
    xpath_for_current_prices = '//td[@class="cell-v9oaRE4W right-v9oaRE4W"]'

    try:
        tickers = list(map(lambda i: i.text, driver.find_elements_by_xpath(xpath_for_tickers)))
        percent_changes = list(
            map(lambda i: float(i.text.replace('%', '')), driver.find_elements_by_xpath(xpath_for_percent_changes)))
        current_prices = list(map(lambda i: i.text, driver.find_elements_by_xpath(xpath_for_current_prices)))[::9]
    except Exception as err:
        LogErrorAndSendAlarm(err)
        continue

    driver.quit()

    try:
        tickers_percent_changes = list(zip(tickers, percent_changes, current_prices))
    except Exception as err:
        LogErrorAndSendAlarm(err)
        continue

    for ticker, percent_change, current_price in tickers_percent_changes:

        current_price = current_price.replace('USD', ' USD')

        if percent_change < 10:
            continue

        try:
            historical_prices = GetHistoricalPrices(ticker)
        except KeyError as err:
            LogErrorAndSendAlarm(err)
            UpdateStocksAbsentInYahooFile(ticker)
            continue
        except Exception as err:
            LogErrorAndSendAlarm(err)
            continue

        if not historical_prices or len(historical_prices) < 750:
            continue

        time.sleep(3)

        with open('stocks_that_are_already_sent.txt', 'r') as f:
            sent_stocks = f.readlines()
            for sent_stock in sent_stocks:
                stocks_that_are_already_sent[sent_stock.split(' ')[0]] = sent_stock.split(' ')[1]
        stock_can_be_sent = False

        if ticker not in stocks_that_are_already_sent.keys():
            stock_can_be_sent = True
        else:
            if float(stocks_that_are_already_sent[ticker]) <= float(percent_change) - 3:
                stock_can_be_sent = True

        if stock_can_be_sent and float(percent_change) >= 10 and all_time_bear_trend_exists(historical_prices):

            CreateImgWith3Plots(historical_prices)

            with open('plot.png', 'rb') as f:
                text = f'Найдена подходящая акция: {ticker}\nИзменение: +{percent_change}%\nЦена: {current_price}'
                bot.send_photo(caption=text, photo=f, chat_id=MY_ID)
                bot.send_photo(caption=text, photo=f, chat_id=BATIN_ID)

            with open('stocks_that_are_already_sent.txt', 'a') as f:
                f.write(f'{ticker} {percent_change}\n')

            time.sleep(1)

        if time.strftime('%H') in '00':
            f = open('stocks_that_are_already_sent.txt', 'w')
            f.close()
            f = open('StocksAbsentInYahoo.txt', 'w')
            f.close()

    time.sleep(10)
